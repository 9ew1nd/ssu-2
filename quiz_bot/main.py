import telebot
import key
from telebot import types
import random

bot = telebot.TeleBot(key.keyword)

teachers_id = [676103951]

questions = ["–° –ø–æ–º–æ—â—å—é –∫–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Å—á–∏—Ç—ã–≤–∞–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã?",
                     "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é —Ü–∏—Ñ—Ä—É —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞ n?",
                     "–ö–∞–∫ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ü–∏–∫–ª –æ—Ç –±–æ–ª—å—à–µ–≥–æ —á–∏—Å–ª–∞ –∫ –º–µ–Ω—å—à–µ–º—É (–æ—Ç a –¥–æ b, a > b)?",
                     "–° –ø–æ–º–æ—â—å—é –∫–∞–∫–æ–π –∫–æ–Ω—Å—Ç—É—Ä–∫—Ü–∏–∏ –º–æ–∂–Ω–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –±–æ–ª–µ–µ –¥–≤—É—Ö –∏—Å—Ö–æ–¥–æ–≤ –≤ –≤–µ—Ç–≤–ª–µ–Ω–∏–∏?",
                     "–ö–∞–∫–∏–µ –≤–∏–¥—ã —Ü–∏–∫–ª–æ–≤ –±—ã–≤–∞—é—Ç –≤ –ø–∏—Ç–æ–Ω–µ?",
                     "–ß—Ç–æ –≤–µ—Ä–Ω—ë—Ç –¥–∞–Ω–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ: 4 and \"w\"?",
                     "–í —á—ë–º –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ range?",
                     "–û–ø–µ—Ä–∞—Ü–∏—è —Å–ª–æ–∂–µ–Ω–∏—è –¥–≤—É—Ö —Å—Ç—Ä–æ–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è ...",
                     "–î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞ a = \"Hello, world!\", –∫–∞–∫–æ–π –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö —Å—Ä–µ–∑–æ–≤ –≤–µ—Ä–Ω—ë—Ç \"world\"?",
                     "def f(x):\n    if x == 0:\n        return 0\n    return f(x - 1)\n\n–¢–∞–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è..."]

ans = [["print", "if", "input", "import"],
               ["n % 10", "n / 10", "n // 10", "n & 10"],
               ["range(a, b, -1)", "–¢–∞–∫ —Å–¥–µ–ª–∞—Ç—å –Ω–µ–ª—å–∑—è", "range(b, a, -1)", "range(a, b - 1, -1)"],
               ["if if", "elif", "case", "–ù–µ—Ç —Ç–∞–∫–æ–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏"],
               ["for, for each, while", "for", "for, while, do while", "for, while"],
               ["True", "False", "4", "w"],
               ["–ù–µ—Ç –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π", "–ü—Ä–∞–≤–∞—è –≥—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –≤–∫–ª—é—á–∞–µ—Ç—Å—è", "–û–±–µ –≥—Ä–∞–Ω–∏—Ü—ã –Ω–µ –≤–∫–ª—é—á–∞—é—Ç—Å—è",
                "–ù–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–µ–∑ for"],
               ["–ö–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—è", "–°–ª–æ–∂–µ–Ω–∏–µ", "–î–∏–∑—ä—é–Ω–∫—Ü–∏—è", "–≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"],
               ["a[7:12]", "a[7:11]", "a[::-1]", "a[6:12]"],
               ["–†–µ–∫—É—Ä—Ä–µ–Ω—Ç–Ω–∞—è", "–¶–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–∞—è", "–†–µ–∫—É—Ä—Å–∏—è", "–ù–µ—Ç –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è"]]
right_ans = [2, 0, 3, 1, 0, 3, 1, 0, 0, 2]
current_question = 0
score = 0
nums = set()

def get_question():
    global current_question
    current_num = random.randrange(0, 10)
    flag = False
    while not(flag):
        if current_num not in nums:
            keyboard = types.InlineKeyboardMarkup(row_width=1)
            ans0 = types.InlineKeyboardButton(text=ans[current_num][0],
                                              callback_data=f'ans_0_{current_num}')
            keyboard.add(ans0)
            ans1 = types.InlineKeyboardButton(text=ans[current_num][1],
                                              callback_data=f'ans_1_{current_num}')
            keyboard.add(ans1)
            ans2 = types.InlineKeyboardButton(text=ans[current_num][2],
                                              callback_data=f'ans_2_{current_num}')
            keyboard.add(ans2)
            ans3 = types.InlineKeyboardButton(text=ans[current_num][3],
                                              callback_data=f'ans_3_{current_num}')
            keyboard.add(ans3)
            stop = types.InlineKeyboardButton(text="–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É ‚ùå",
                                              callback_data='stop')
            keyboard.add(stop)
            nums.add(current_num)
            flag = True
            current_question += 1
        else:
            current_num = random.randrange(0, 10)
    return [current_num, keyboard]

@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    if message.text == "–ü—Ä–∏–≤–µ—Ç":
        bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ "
                                               "–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –Ω–∞–ø–∏—à–∏—Ç–µ /start")
    elif message.text == "/start":
        msg_text = "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –≠—Ç–æ –æ–±—É—á–∞—é—â–∏–π –±–æ—Ç –ø–æ Python. –î–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /menu"
        bot.send_message(message.from_user.id, msg_text)
    elif message.text == "/menu":
        keyboard2 = types.InlineKeyboardMarkup(row_width=1)
        key_menu_python = types.InlineKeyboardButton(text='–ò–∑—É—á–µ–Ω–∏–µ Python üêç', callback_data='python')
        key_menu_oge = types.InlineKeyboardButton(text="–û–ì–≠ üíØ", callback_data='oge')
        key_menu_ege = types.InlineKeyboardButton(text="–ï–ì–≠ üñ•Ô∏è", callback_data='ege')
        key_sam_rab = types.InlineKeyboardButton(text="–°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã ‚ùì", callback_data='sam_rab')
        keyboard2.add(key_menu_python)
        keyboard2.add(key_menu_oge)
        keyboard2.add(key_menu_ege)
        keyboard2.add(key_sam_rab)
        bot.send_message(message.from_user.id, text="–ù–∞–≤–∏–≥–∞—Ü–∏—è. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª", reply_markup=keyboard2)
    else:
        bot.send_message(message.from_user.id, "–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é! –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é,"
                                               " –Ω–∞–ø–∏—à–∏—Ç–µ /start –∏–ª–∏ /menu!")

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    if call.message:
        # —ç—Ç–∞ —á–∞—Å—Ç—å –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ callback_data = 'quiz'
        global current_question, score, nums
        print(call.from_user.id)
        if call.data == "menu":
            # –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏
            keyboard2 = types.InlineKeyboardMarkup(row_width=1)
            key_menu_python = types.InlineKeyboardButton(text='–ò–∑—É—á–µ–Ω–∏–µ Python üêç', callback_data='python')
            key_menu_oge = types.InlineKeyboardButton(text="–û–ì–≠ üíØ", callback_data='oge')
            key_menu_ege = types.InlineKeyboardButton(text="–ï–ì–≠ üñ•Ô∏è", callback_data='ege')
            key_sam_rab = types.InlineKeyboardButton(text="–°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã ‚ùì", callback_data='sam_rab')
            keyboard2.add(key_menu_python)
            keyboard2.add(key_menu_oge)
            keyboard2.add(key_menu_ege)
            keyboard2.add(key_sam_rab)
            bot.send_message(call.from_user.id, text="–ù–∞–≤–∏–≥–∞—Ü–∏—è. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª", reply_markup=keyboard2)

        if call.data == "stop":
            keyboard2 = types.InlineKeyboardMarkup(row_width=1)
            key_menu_python = types.InlineKeyboardButton(text='–ò–∑—É—á–µ–Ω–∏–µ Python üêç', callback_data='python')
            key_menu_oge = types.InlineKeyboardButton(text="–û–ì–≠ üíØ", callback_data='oge')
            key_menu_ege = types.InlineKeyboardButton(text="–ï–ì–≠ üñ•Ô∏è", callback_data='ege')
            key_sam_rab = types.InlineKeyboardButton(text="–°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã ‚ùì", callback_data='sam_rab')
            keyboard2.add(key_menu_python)
            keyboard2.add(key_menu_oge)
            keyboard2.add(key_menu_ege)
            keyboard2.add(key_sam_rab)
            bot.send_message(call.from_user.id, text=f"–í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –í–∞—à —Å—á—ë—Ç: {score}. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª",
                             reply_markup=keyboard2)

        if call.data == "quiz_start":
            keyboard1 = types.InlineKeyboardMarkup(row_width=1)
            key_quiz = types.InlineKeyboardButton(text='–ö–≤–∏–∑ –ø–æ Python', callback_data='quiz')
            key_quiz_back = types.InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data='python')
            keyboard1.add(key_quiz)
            keyboard1.add(key_quiz_back)
            # –¥–æ–±–∞–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∫–≤–∏–∑–∞
            question = "–í—ã —Ö–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –≤ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É –ø–æ Python?"
            bot.send_message(call.from_user.id, text=question, reply_markup=keyboard1)

        # –º–µ–Ω—é –¥–ª—è —Ç–∏—á–µ—Ä–æ–≤ –ø–æ–∫–∞ –Ω–µ –Ω–∞–ø–∏—Å–∞–Ω–æ
        if call.data == 'sam_rab':
            keyboard1 = types.InlineKeyboardMarkup(row_width=1)
            if call.from_user.id in teachers_id:
                teach_key = types.InlineKeyboardButton("–ü—É–ª —Ä–∞–±–æ—Ç", callback_data='teacher')
                keyboard1.add(teach_key)
            work1_key = types.InlineKeyboardButton("–°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ 1", callback_data='work 1')
            key_works_back = types.InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data='menu')
            keyboard1.add(work1_key, key_works_back)
            bot.send_message(call.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç', reply_markup=keyboard1)

        if call.data.split()[0] == 'work':
            def student_answer(message):
                acept = bot.send_message(message.from_user.id, "–í—ã —É–≤–µ—Ä–µ–Ω—ã –∏ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞–±–æ—Ç—É –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É?"
                                                               " (–¥–∞/–Ω–µ—Ç)\n\n"
                                                               "–í–∞—à –æ—Ç–≤–µ—Ç:\n" + message.text)
                bot.register_next_step_handler(acept, acept_f, message.text)
            def acept_f(message, last_msg):
                if message.text.lower() == '–¥–∞':
                    f = open('work_1_logs.txt', 'r')
                    logs_1 = []
                    for i in f:
                        logs_1.append(i)
                    if str(message.from_user.id) + "\n" not in logs_1:
                        f = open('work_1_logs.txt', 'a')
                        f.write(str(message.from_user.id) + '\n')
                        bot.send_message(message.chat.id, '–ó–∞–ø–∏—Å–∞–Ω–æ')
                        for i in teachers_id:
                            bot.send_message(i, f'–ù–æ–≤—ã–π –æ—Ç–≤–µ—Ç –æ—Ç {message.from_user.first_name} '
                                            f'{message.from_user.last_name}, —Ä–∞–±–æ—Ç–∞ {call.data.split()[1]}\n\n'
                                                f'–¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞:\n{last_msg}')
                    else:
                        bot.send_message(message.from_user.id, '–û—à–∏–±–∫–∞! –í—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ –¥–∞–Ω–Ω—É—é —Ä–∞–±–æ—Ç—É')
                    f.close()
                else:
                    repeat = bot.send_message(message.from_user.id, '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥')
                    bot.register_next_step_handler(repeat, student_answer)
            if call.data.split()[1] == '1':
                cap = ("–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞, –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –ø—Ä–∏—à–ª–∏—Ç–µ –≤–∞—à –æ—Ç–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n\n"
                       "–ò–º—è –∏ –§–∞–º–∏–ª–∏—è, –∫–ª–∞—Å—Å\n\n–û—Ç–≤–µ—Ç—ã:\n1.\n2.\n3.\n...")
                ''''
                doc = bot.send_document(call.from_user.id, open('work_1.pdf', 'rb'),
                                  caption=cap)
                '''
                doc = bot.send_message(call.from_user.id, cap)
                bot.register_next_step_handler(doc, student_answer)


        if call.data == "python":
            keyboard_python = types.InlineKeyboardMarkup(row_width=1)
            key_python = types.InlineKeyboardButton("–ö–≤–∏–∑ ‚ùì", callback_data='quiz_start')
            key_polz = types.InlineKeyboardButton("–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏", callback_data='links')
            key_theory = types.InlineKeyboardButton("–¢–µ–æ—Ä–∏—è", callback_data='theory')
            key_python_back = types.InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data='menu')
            keyboard_python.add(key_python, key_polz, key_theory, key_python_back)
            bot.send_message(call.from_user.id, text = '–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª', reply_markup=keyboard_python)

        if call.data == 'links':
            keyboard_links = types.InlineKeyboardMarkup(row_width=1)
            key_python_back = types.InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data='python')
            key_of = types.InlineKeyboardButton("–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç –ø–∏—Ç–æ–Ω–∞",
                                                url = 'https://www.python.org/')
            key_doc = types.InlineKeyboardButton("–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ —è–∑—ã–∫—É",
                                                 url = 'https://docs.python.org/3/')
            key_course1 = types.InlineKeyboardButton("–ö—É—Ä—Å –ø–æ —è–∑—ã–∫—É –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö",
                                                     url = 'https://stepik.org/course/58852/syllabus?search=4295780044')
            key_course2 = types.InlineKeyboardButton('–ö—É—Ä—Å –ø–æ —è–∑—ã–∫—É –¥–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö',
                                                     url = 'https://stepik.org/course/68343/promo?search=4295780045')
            keyboard_links.add(key_of,
                               key_doc,
                               key_course1,
                               key_course2,
                               key_python_back)
            bot.send_message(call.from_user.id, text = '–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏',
                             reply_markup=keyboard_links)

        if call.data == 'theory':
            gl = ['–ì–ª–∞–≤–∞ 1. –í–≤–µ–¥–µ–Ω–∏–µ –≤ Python',
                  '–ì–ª–∞–≤–∞ 2. –û—Å–Ω–æ–≤—ã Python',
                  '–ì–ª–∞–≤–∞ 3. –û–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ',
                  '–ì–ª–∞–≤–∞ 4. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–π',
                  '–ì–ª–∞–≤–∞ 5. –°–ø–∏—Å–∫–∏, –∫–æ—Ä—Ç–µ–∂–∏ –∏ —Å–ª–æ–≤–∞—Ä–∏',
                  '–ì–ª–∞–≤–∞ 6. –ú–æ–¥—É–ª–∏',
                  '–ì–ª–∞–≤–∞ 7. –°—Ç—Ä–æ–∫–∏',
                  '–ì–ª–∞–≤–∞ 8. Pattern matching',
                  '–ì–ª–∞–≤–∞ 9. –†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏',
                  '–ì–ª–∞–≤–∞ 10. –†–∞–±–æ—Ç–∞ —Å –¥–∞—Ç–∞–º–∏ –∏ –≤—Ä–µ–º–µ–Ω–µ–º']

            url = ['https://metanit.com/python/tutorial/1.1.php',
                   'https://metanit.com/python/tutorial/2.1.php',
                   'https://metanit.com/python/tutorial/7.1.php',
                   'https://metanit.com/python/tutorial/2.11.php',
                   'https://metanit.com/python/tutorial/3.1.php',
                   'https://metanit.com/python/tutorial/2.10.php',
                   'https://metanit.com/python/tutorial/5.1.php',
                   'https://metanit.com/python/tutorial/2.13.php',
                   'https://metanit.com/python/tutorial/4.1.php',
                   'https://metanit.com/python/tutorial/8.1.php']

            theory_keyboard = types.InlineKeyboardMarkup(row_width=1)
            for i in range(10):
                key_th = types.InlineKeyboardButton(text=gl[i],
                                                    url=url[i])
                theory_keyboard.add(key_th)
            key_python_back = types.InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data='python')
            theory_keyboard.add(key_python_back)
            bot.send_message(call.from_user.id, text="–°—Å—ã–ª–∫–∏ –Ω–∞ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–π –º–∞—Ç–µ—Ä–∏–∞–ª. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –≥–ª–∞–≤—É:",
                             reply_markup=theory_keyboard)

        if call.data == "oge":
            oge_keyboard = types.InlineKeyboardMarkup(row_width=1)
            demo_key = types.InlineKeyboardButton("–î–µ–º–æ-–≤–µ—Ä—Å–∏—è –∏ —Å–∏–º—É–ª—è—Ç–æ—Ä—ã", callback_data='demo_oge')
            tasks_key = types.InlineKeyboardButton("–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞–Ω–∏–π", callback_data='tasks_oge')
            key_back = types.InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data='menu')
            oge_keyboard.add(demo_key, tasks_key, key_back)
            bot.send_message(call.from_user.id, text="–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª", reply_markup=oge_keyboard)

        if call.data == 'demo_oge':
            keyboard_links_oge = types.InlineKeyboardMarkup(row_width=1)
            key_oge_back = types.InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data='oge')
            key_bank = types.InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—ã–π –±–∞–Ω–∫ –∑–∞–¥–∞–Ω–∏–π",
                                                    url='https://oge.fipi.ru/bank/index.php?proj=74676951F093A0754D74F2D6E7955F06')
            key_demo = types.InlineKeyboardButton("–î–µ–º–æ-–≤–µ—Ä—Å–∏—è",
                                                     url='https://fipi.ru/oge/demoversii-specifikacii-kodifikatory#!/tab/173801626-5')
            key_generat = types.InlineKeyboardButton("–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤",
                                                         url='https://kpolyakov.spb.ru/school/oge/generate.htm')
            key_navig_oge = types.InlineKeyboardButton(text='–ù–∞–≤–∏–≥–∞—Ç–æ—Ä –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –û–ì–≠ –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ',
                                                       url = 'https://fipi.ru/navigator-podgotovki/navigator-oge#inf')
            key_balls = types.InlineKeyboardButton(text='–®–∫–∞–ª–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ –±–∞–ª–ª–æ–≤',
                                                   url='https://4ege.ru/gia-in-9/55351-shkala-perevoda-ballov-oge.html')
            keyboard_links_oge.add(key_bank,
                                   key_demo,
                                   key_generat,
                                   key_navig_oge,
                                   key_balls,
                                   key_oge_back)
            bot.send_message(call.from_user.id, text='–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏',
                                 reply_markup=keyboard_links_oge)

        if call.data == 'tasks_oge':
            tasks_keyb = types.InlineKeyboardMarkup(row_width=1)
            themes_oge = ['1. –û—Ü–µ–Ω–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –æ–±—ä—ë–º–∞ —Ç–µ–∫—Å—Ç–∞',
                          '2. –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–æ–≤–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏',
                          '3. –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏—Å—Ç–∏–Ω–Ω–æ—Å—Ç–∏ –≤—ã—Å–∫–∞–∑—ã–≤–∞–Ω–∏—è',
                          '4. –ê–Ω–∞–ª–∏–∑ –º–æ–¥–µ–ª–µ–π –æ–±—ä–µ–∫—Ç–æ–≤',
                          '5. –ê–Ω–∞–ª–∏–∑ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –¥–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è',
                          '6. –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º —Å –≤–µ—Ç–≤–ª–µ–Ω–∏—è–º–∏',
                          '7. –ê–¥—Ä–µ—Å–∞—Ü–∏—è –≤ —Å–µ—Ç–∏ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç',
                          '8. –ü–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã –≤ —Å–µ—Ç–∏ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç',
                          '9. –ê–Ω–∞–ª–∏–∑ —Å—Ö–µ–º (–≥—Ä–∞—Ñ–æ–≤)',
                          '10. –ó–∞–ø–∏—Å—å —á–∏—Å–µ–ª –≤ —Ä–∞–∑–Ω—ã—Ö —Å–∏—Å—Ç–µ–º–∞—Ö —Å—á–∏—Å–ª–µ–Ω–∏—è',
                          '11. –ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Ñ–∞–π–ª–∞—Ö –∏ –∫–∞—Ç–∞–ª–æ–≥–∞—Ö',
                          '12. –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏ –æ–±—ä—ë–º–∞ —Ñ–∞–π–ª–æ–≤',
                          '13.1. –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π',
                          '13.2. –ù–∞–±–æ—Ä –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞',
                          '14. –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ',
                          '15.1. –°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è',
                          '15.2. –°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–∞ —è–∑—ã–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è'
                          ]
            for i in range(1, 18):
                key = types.InlineKeyboardButton(f"{themes_oge[i - 1]}", callback_data=f'task_oge {i}')
                tasks_keyb.add(key)
            key_back = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥ üîô', callback_data='menu')
            tasks_keyb.add(key_back)
            bot.send_message(call.from_user.id, text = '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ:', reply_markup=tasks_keyb)

        if call.data.split()[0] == 'task_oge':
            number = int(call.data.split()[1])
            url_web_oge = ['https://www.youtube.com/watch?v=9H9xAK3Y25o&ab_channel=%D0%98%D0%B2%D0%B0%D0%BD%D0%92%D0%B8%D0%BA%D1%82%D0%BE%D1%80%D0%BE%D0%B2%D0%B8%D1%87',
                           'https://www.youtube.com/watch?v=CEtG5MUmvWM&ab_channel=%D0%98%D0%B2%D0%B0%D0%BD%D0%92%D0%B8%D0%BA%D1%82%D0%BE%D1%80%D0%BE%D0%B2%D0%B8%D1%87',
                           'https://www.youtube.com/watch?v=Ekrt54b_8as&ab_channel=%D0%98%D0%B2%D0%B0%D0%BD%D0%92%D0%B8%D0%BA%D1%82%D0%BE%D1%80%D0%BE%D0%B2%D0%B8%D1%87',
                           'https://www.youtube.com/watch?v=8lv-35Y1yQY&ab_channel=%D0%98%D0%B2%D0%B0%D0%BD%D0%92%D0%B8%D0%BA%D1%82%D0%BE%D1%80%D0%BE%D0%B2%D0%B8%D1%87',
                           'https://www.youtube.com/watch?v=ybwyb-CdNTg&ab_channel=%D0%98%D0%B2%D0%B0%D0%BD%D0%92%D0%B8%D0%BA%D1%82%D0%BE%D1%80%D0%BE%D0%B2%D0%B8%D1%87',
                           'https://www.youtube.com/watch?v=R2upK0ujKaQ&ab_channel=%D0%98%D0%B2%D0%B0%D0%BD%D0%92%D0%B8%D0%BA%D1%82%D0%BE%D1%80%D0%BE%D0%B2%D0%B8%D1%87',
                           'https://www.youtube.com/watch?v=1qHXzmYnO7A&ab_channel=%D0%98%D0%B2%D0%B0%D0%BD%D0%92%D0%B8%D0%BA%D1%82%D0%BE%D1%80%D0%BE%D0%B2%D0%B8%D1%87',
                           'https://www.youtube.com/watch?v=xxxI27oFs1E&t=560s&ab_channel=%D0%98%D0%B2%D0%B0%D0%BD%D0%92%D0%B8%D0%BA%D1%82%D0%BE%D1%80%D0%BE%D0%B2%D0%B8%D1%87',
                           'https://www.youtube.com/watch?v=Xrjl7lv3sVM&ab_channel=%D0%98%D0%B2%D0%B0%D0%BD%D0%92%D0%B8%D0%BA%D1%82%D0%BE%D1%80%D0%BE%D0%B2%D0%B8%D1%87',
                           'https://www.youtube.com/watch?v=HNXq5tJS8Fg&ab_channel=%D0%98%D0%B2%D0%B0%D0%BD%D0%92%D0%B8%D0%BA%D1%82%D0%BE%D1%80%D0%BE%D0%B2%D0%B8%D1%87',
                           'https://www.youtube.com/watch?v=lbgNJVePReA&ab_channel=%D0%98%D0%B2%D0%B0%D0%BD%D0%92%D0%B8%D0%BA%D1%82%D0%BE%D1%80%D0%BE%D0%B2%D0%B8%D1%87',
                           'https://www.youtube.com/watch?v=CDIZ8jIfnWU&ab_channel=%D0%98%D0%B2%D0%B0%D0%BD%D0%92%D0%B8%D0%BA%D1%82%D0%BE%D1%80%D0%BE%D0%B2%D0%B8%D1%87',
                           'https://www.youtube.com/watch?v=NecFCDQnEJ8&ab_channel=%D0%98%D0%B2%D0%B0%D0%BD%D0%92%D0%B8%D0%BA%D1%82%D0%BE%D1%80%D0%BE%D0%B2%D0%B8%D1%87',
                           'https://www.youtube.com/watch?v=JPbaATVHMIE&ab_channel=%D0%98%D0%B2%D0%B0%D0%BD%D0%92%D0%B8%D0%BA%D1%82%D0%BE%D1%80%D0%BE%D0%B2%D0%B8%D1%87',
                           'https://www.youtube.com/watch?v=1JkOdpQ2LAQ&ab_channel=%D0%98%D0%B2%D0%B0%D0%BD%D0%92%D0%B8%D0%BA%D1%82%D0%BE%D1%80%D0%BE%D0%B2%D0%B8%D1%87',
                           'https://www.youtube.com/watch?v=EvsG6OImEMs&ab_channel=%D0%98%D0%B2%D0%B0%D0%BD%D0%92%D0%B8%D0%BA%D1%82%D0%BE%D1%80%D0%BE%D0%B2%D0%B8%D1%87',
                           'https://www.youtube.com/watch?v=CpK_k2H3v0s&ab_channel=%D0%98%D0%B2%D0%B0%D0%BD%D0%92%D0%B8%D0%BA%D1%82%D0%BE%D1%80%D0%BE%D0%B2%D0%B8%D1%87']
            url_polyakov_oge = ['https://kpolyakov.spb.ru/school/oge/gen.php?action=viewAllEgeNo&egeId=201&cat124=on',
                           'https://kpolyakov.spb.ru/school/oge/gen.php?action=viewAllEgeNo&egeId=202&cat125=on',
                           'https://kpolyakov.spb.ru/school/oge/gen.php?action=viewAllEgeNo&egeId=203&cat126=on&cat143=on',
                           'https://kpolyakov.spb.ru/school/oge/gen.php?action=viewAllEgeNo&egeId=204&cat127=on',
                           'https://kpolyakov.spb.ru/school/oge/gen.php?action=viewAllEgeNo&egeId=205&cat128=on',
                           'https://kpolyakov.spb.ru/school/oge/gen.php?action=viewAllEgeNo&egeId=206&cat129=on&cat178=on',
                           'https://kpolyakov.spb.ru/school/oge/gen.php?action=viewAllEgeNo&egeId=207&cat135=on',
                           'https://kpolyakov.spb.ru/school/oge/gen.php?action=viewAllEgeNo&egeId=208&cat134=on',
                           'https://kpolyakov.spb.ru/school/oge/gen.php?action=viewAllEgeNo&egeId=209&cat130=on',
                           'https://kpolyakov.spb.ru/school/oge/gen.php?action=viewAllEgeNo&egeId=210&cat131=on&cat132=on&cat133=on',
                           'https://kpolyakov.spb.ru/school/oge/gen.php?action=viewAllEgeNo&egeId=211&cat136=on',
                           'https://kpolyakov.spb.ru/school/oge/gen.php?action=viewAllEgeNo&egeId=212&cat137=on&cat138=on',
                           'https://kpolyakov.spb.ru/school/oge/gen.php?action=viewAllEgeNo&egeId=213&cat141=on',
                           'https://kpolyakov.spb.ru/school/oge/gen.php?action=viewAllEgeNo&egeId=214&cat142=on',
                           'https://kpolyakov.spb.ru/school/oge/gen.php?action=viewAllEgeNo&egeId=215&cat139=on',
                           'https://kpolyakov.spb.ru/school/oge/gen.php?action=viewAllEgeNo&egeId=216&cat140=on&cat115=on',
                           'https://kpolyakov.spb.ru/school/oge/gen.php?action=viewAllEgeNo&egeId=217&cat116=on']
            keyb = types.InlineKeyboardMarkup(row_width=1)
            key_tasks = types.InlineKeyboardButton(text='–ó–∞–¥–∞—á–∏ –ø–æ —Ç–µ–º–µ', url=url_polyakov_oge[number - 1])
            key_back = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥ üîô', callback_data='tasks_oge')
            key_web = types.InlineKeyboardButton(text='–í–µ–±–∏–Ω–∞—Ä', url=url_web_oge[number - 1])
            keyb.add(key_web, key_tasks, key_back)
            if number == 13:
                number = "13.1"
            if number == 14:
                number = "13.2"
            if number == 16:
                number = "15.1"
            if number == 17:
                number = "15.2"
            bot.send_message(call.from_user.id, text=f'–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è –Ω–æ–º–µ—Ä {number}:',
                             reply_markup=keyb)

        if call.data == "ege":
            ege_keyboard = types.InlineKeyboardMarkup(row_width=1)
            demo_key = types.InlineKeyboardButton("–î–µ–º–æ-–≤–µ—Ä—Å–∏—è –∏ —Å–∏–º—É–ª—è—Ç–æ—Ä—ã", callback_data='demo_ege')
            tasks_key = types.InlineKeyboardButton("–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞–Ω–∏–π", callback_data='tasks')
            key_back = types.InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data='menu')
            ege_keyboard.add(demo_key, tasks_key, key_back)
            bot.send_message(call.from_user.id, text="–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª", reply_markup=ege_keyboard)

        if call.data == 'demo_ege':
            keyboard_links_ege = types.InlineKeyboardMarkup(row_width=1)
            key_ege_back = types.InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data='ege')
            key_bank = types.InlineKeyboardButton("–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å—Ç–∞–Ω—Ü–∏–∏ –ö–ï–ì–≠",
                                                    url='https://kompege.ru/')
            key_demo = types.InlineKeyboardButton("–î–µ–º–æ-–≤–µ—Ä—Å–∏—è",
                                                     url='https://fipi.ru/ege/demoversii-specifikacii-kodifikatory#!/tab/151883967-5')
            key_generat = types.InlineKeyboardButton("–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤",
                                                         url='https://kpolyakov.spb.ru/school/ege/generate.htm')
            key_navig_ege = types.InlineKeyboardButton(text='–ù–∞–≤–∏–≥–∞—Ç–æ—Ä –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –ï–ì–≠ –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ',
                                                       url = 'https://fipi.ru/navigator-podgotovki/navigator-ege#inf')
            key_balls = types.InlineKeyboardButton(text='–®–∫–∞–ª–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ –±–∞–ª–ª–æ–≤',
                                                   url='https://4ege.ru/novosti-ege/4023-shkala-perevoda-ballov-ege.html')
            keyboard_links_ege.add(key_bank,
                                   key_demo,
                                   key_generat,
                                   key_navig_ege,
                                   key_balls,
                                   key_ege_back)
            bot.send_message(call.from_user.id, text='–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏',
                                 reply_markup=keyboard_links_ege)

        if call.data == 'tasks':
            tasks_keyboard = types.InlineKeyboardMarkup(row_width=1)
            themes = ["–ê–Ω–∞–ª–∏–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π",
                      "–¢–∞–±–ª–∏—Ü—ã –∏—Å—Ç–∏–Ω–Ω–æ—Å—Ç–∏ –ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π",
                      "–ü–æ–∏—Å–∫ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –≤ –±–∞–∑–∞—Ö –¥–∞–Ω–Ω—ã—Ö",
                      "–ö–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö. –£—Å–ª–æ–≤–∏–µ –§–∞–Ω–æ",
                      "–ê–Ω–∞–ª–∏–∑ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –¥–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π",
                      "–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º —Å —Ü–∏–∫–ª–∞–º–∏",
                      "–ö–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–π –∏ –∑–≤—É–∫–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏",
                      "–ö–æ–º–±–∏–Ω–∞—Ç–æ—Ä–∏–∫–∞",
                      "–û–±—Ä–∞–±–æ—Ç–∫–∞ —á–∏—Å–ª–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö",
                      "–ü–æ–∏—Å–∫ —Å–ª–æ–≤–∞ –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–µ",
                      "–í—ã—á–∏—Å–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏",
                      "–ê–ª–≥–æ—Ä–∏—Ç–º—ã –¥–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π —Å —Ü–∏–∫–ª–∞–º–∏ –∏ –≤–µ—Ç–≤–ª–µ–Ω–∏—è–º–∏",
                      "IP-–∞–¥—Ä–µ—Å–∞ –∏ –º–∞—Å–∫–∏",
                      "–ü–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã —Å—á–∏—Å–ª–µ–Ω–∏—è",
                      "–ò—Å—Ç–∏–Ω–Ω–æ—Å—Ç—å –ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è",
                      "–í—ã—á–∏—Å–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏",
                      "–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ–ª–∏–º–æ—Å—Ç–∏",
                      "–î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö",
                      "–¢–µ–æ—Ä–∏—è –∏–≥—Ä",
                      "",
                      "",
                      "–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º —Å —Ü–∏–∫–ª–∞–º–∏ –∏ –≤–µ—Ç–≤–ª–µ–Ω–∏—è–º–∏",
                      "–î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–≥—Ä–∞–º–º)",
                      "–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–º–≤–æ–ª—å–Ω—ã—Ö —Å—Ç—Ä–æ–∫",
                      "–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∏—Å–∫ –¥–µ–ª–∏—Ç–µ–ª–µ–π",
                      "–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–º–æ—â—å—é —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏",
                      "–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—Ç–æ–∫–∞ –¥–∞–Ω–Ω—ã—Ö",
                      ]
            for i in range(1, 28):
                if i == 20 or i == 21:
                    continue
                elif i == 19:
                    key = types.InlineKeyboardButton(f"–ó–∞–¥–∞–Ω–∏—è 19-21: {themes[18]}", callback_data=f'task {i}')
                    tasks_keyboard.add(key)
                else:
                    key = types.InlineKeyboardButton(f"–ó–∞–¥–∞–Ω–∏–µ {i}: {themes[i - 1]}", callback_data=f'task {i}')
                    tasks_keyboard.add(key)
            key_back = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥ üîô', callback_data='menu')
            tasks_keyboard.add(key_back)
            bot.send_message(call.from_user.id, text = '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ:', reply_markup=tasks_keyboard)

        if call.data.split()[0] == 'task':
            number = int(call.data.split()[1])
            if number == 20 or number == 21:
                number = 19
            url_polyakov = ['https://kpolyakov.spb.ru/school/ege/gen.php?action=viewAllEgeNo&egeId=1&cat12=on&cat13=on',
                            'https://kpolyakov.spb.ru/school/ege/gen.php?action=viewAllEgeNo&egeId=2&cat8=on',
                            'https://kpolyakov.spb.ru/school/ege/gen.php?action=viewAllEgeNo&egeId=2&cat8=on',
                            'https://kpolyakov.spb.ru/school/ege/gen.php?action=viewAllEgeNo&egeId=4&cat21=on&cat22=on&cat23=on&cat25=on&cat166=on',
                            'https://kpolyakov.spb.ru/school/ege/gen.php?action=viewAllEgeNo&egeId=4&cat21=on&cat22=on&cat23=on&cat25=on&cat166=on',
                            'https://kpolyakov.spb.ru/school/ege/gen.php?action=viewAllEgeNo&egeId=6&cat175=on&cat179=on&cat180=on',
                            'https://kpolyakov.spb.ru/school/ege/gen.php?action=viewAllEgeNo&egeId=7&cat38=on&cat39=on',
                            'https://kpolyakov.spb.ru/school/ege/gen.php?action=viewAllEgeNo&egeId=8&cat42=on&cat43=on&cat145=on',
                            'https://kpolyakov.spb.ru/school/ege/gen.php?action=viewAllEgeNo&egeId=9&cat146=on&cat147=on',
                            'https://kpolyakov.spb.ru/school/ege/gen.php?action=viewAllEgeNo&egeId=10&cat148=on',
                            'https://kpolyakov.spb.ru/school/ege/gen.php?action=viewAllEgeNo&egeId=11&cat52=on&cat53=on&cat54=on&cat149=on',
                            'https://kpolyakov.spb.ru/school/ege/gen.php?action=viewAllEgeNo&egeId=12&cat55=on&cat56=on&cat57=on&cat58=on',
                            'https://kpolyakov.spb.ru/school/ege/gen.php?action=viewAllEgeNo&egeId=13&cat48=on&cat49=on&cat50=on&cat51=on&cat177=on',
                            'https://kpolyakov.spb.ru/school/ege/gen.php?action=viewAllEgeNo&egeId=14&cat60=on&cat61=on&cat62=on&cat174=on',
                            'https://kpolyakov.spb.ru/school/ege/gen.php?action=viewAllEgeNo&egeId=15&cat67=on&cat68=on&cat69=on&cat70=on&cat123=on&cat167=on',
                            'https://kpolyakov.spb.ru/school/ege/gen.php?action=viewAllEgeNo&egeId=16&cat44=on&cat45=on&cat46=on&cat181=on',
                            'https://kpolyakov.spb.ru/school/ege/gen.php?action=viewAllEgeNo&egeId=17&cat168=on&cat170=on',
                            'https://kpolyakov.spb.ru/school/ege/gen.php?action=viewAllEgeNo&egeId=18&cat152=on&cat153=on&cat165=on',
                            'https://kpolyakov.spb.ru/school/ege/gen.php?action=viewAllEgeNo&egeId=19&cat154=on&cat163=on&cat171=on',
                            '',
                            '',
                            'https://kpolyakov.spb.ru/school/ege/gen.php?action=viewAllEgeNo&egeId=22&cat176=on',
                            'https://kpolyakov.spb.ru/school/ege/gen.php?action=viewAllEgeNo&egeId=23&cat78=on&cat79=on&cat80=on&cat162=on',
                            'https://kpolyakov.spb.ru/school/ege/gen.php?action=viewAllEgeNo&egeId=23&cat78=on&cat79=on&cat80=on&cat162=on',
                            'https://kpolyakov.spb.ru/school/ege/gen.php?action=viewAllEgeNo&egeId=25&cat157=on&cat158=on&cat159=on&cat172=on',
                            'https://kpolyakov.spb.ru/school/ege/gen.php?action=viewAllEgeNo&egeId=26&cat160=on',
                            'https://kpolyakov.spb.ru/school/ege/gen.php?action=viewAllEgeNo&egeId=27&cat161=on']
            url_web = ['https://www.youtube.com/watch?v=ozdqnEJ5C0U&ab_channel=%D0%98%D0%BD%D1%84%D0%BE%D1%80%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0%D0%95%D0%93%D0%AD%D0%A3%D0%BC%D1%81%D0%BA%D1%83%D0%BB',
                       'https://www.youtube.com/watch?v=Af_U6uXnBAU&ab_channel=%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B5%D0%B9%D0%9A%D0%B0%D0%B1%D0%B0%D0%BD%D0%BE%D0%B2',
                       'https://www.youtube.com/watch?v=1-Uyk7R0Als&ab_channel=%D0%98%D0%BD%D1%84%D0%BE%D1%80%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%91%D0%A3',
                       'https://www.youtube.com/watch?v=dvh5Dqtak84&ab_channel=%D0%98%D0%BD%D1%84%D0%BE%D1%80%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0%D0%95%D0%93%D0%AD%D0%A3%D0%BC%D1%81%D0%BA%D1%83%D0%BB',
                       'https://www.youtube.com/watch?v=e6LREsEYSgs&ab_channel=%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B5%D0%B9%D0%9A%D0%B0%D0%B1%D0%B0%D0%BD%D0%BE%D0%B2',
                       'https://www.youtube.com/watch?v=NgQDtUT-Cfg&ab_channel=%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B5%D0%B9%D0%9A%D0%B0%D0%B1%D0%B0%D0%BD%D0%BE%D0%B2',
                       'https://www.youtube.com/watch?v=mXfkEe1sHjQ&ab_channel=%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B5%D0%B9%D0%9A%D0%B0%D0%B1%D0%B0%D0%BD%D0%BE%D0%B2',
                       ['https://www.youtube.com/watch?v=2rGWq2BtnPo&ab_channel=%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B5%D0%B9%D0%9A%D0%B0%D0%B1%D0%B0%D0%BD%D0%BE%D0%B2',
                        'https://www.youtube.com/watch?v=3Rs1O5LrqVg&t=22s&ab_channel=%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B5%D0%B9%D0%9A%D0%B0%D0%B1%D0%B0%D0%BD%D0%BE%D0%B2'],
                       ['https://www.youtube.com/watch?v=qHnU8bL6W-E&ab_channel=%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B5%D0%B9%D0%9A%D0%B0%D0%B1%D0%B0%D0%BD%D0%BE%D0%B2',
                        'https://www.youtube.com/watch?v=qSOfcDi18f0&ab_channel=%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B5%D0%B9%D0%9A%D0%B0%D0%B1%D0%B0%D0%BD%D0%BE%D0%B2'],
                       'https://www.youtube.com/watch?v=ZEsZ9ykEfjM&ab_channel=%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B5%D0%B9%D0%9A%D0%B0%D0%B1%D0%B0%D0%BD%D0%BE%D0%B2',
                       'https://www.youtube.com/watch?v=bnczfcOM_Hw&ab_channel=%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B5%D0%B9%D0%9A%D0%B0%D0%B1%D0%B0%D0%BD%D0%BE%D0%B2',
                       'https://www.youtube.com/watch?v=kLAEaxh5yXY&ab_channel=%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B5%D0%B9%D0%9A%D0%B0%D0%B1%D0%B0%D0%BD%D0%BE%D0%B2',
                       'https://www.youtube.com/watch?v=KpnBfUWbO5c&ab_channel=%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B5%D0%B9%D0%9A%D0%B0%D0%B1%D0%B0%D0%BD%D0%BE%D0%B2',
                       'https://www.youtube.com/watch?v=FZUClCb-ous&ab_channel=%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B5%D0%B9%D0%9A%D0%B0%D0%B1%D0%B0%D0%BD%D0%BE%D0%B2',
                       'https://www.youtube.com/watch?v=R4_lZkSFAew&t=3540s&ab_channel=%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B5%D0%B9%D0%9A%D0%B0%D0%B1%D0%B0%D0%BD%D0%BE%D0%B2',
                       'https://www.youtube.com/watch?v=-0J6DR8CyhY&ab_channel=%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B5%D0%B9%D0%9A%D0%B0%D0%B1%D0%B0%D0%BD%D0%BE%D0%B2',
                       'https://www.youtube.com/watch?v=91-2WWjZG5s&ab_channel=%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B5%D0%B9%D0%9A%D0%B0%D0%B1%D0%B0%D0%BD%D0%BE%D0%B2',
                       'https://www.youtube.com/watch?v=yRyI0bRR1ME&ab_channel=%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B5%D0%B9%D0%9A%D0%B0%D0%B1%D0%B0%D0%BD%D0%BE%D0%B2',
                       'https://www.youtube.com/watch?v=saqqoCS6wjk&ab_channel=%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B5%D0%B9%D0%9A%D0%B0%D0%B1%D0%B0%D0%BD%D0%BE%D0%B2',
                       '',
                       '',
                       'https://www.youtube.com/watch?v=V-5BmDuaGLQ&ab_channel=%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B5%D0%B9%D0%9A%D0%B0%D0%B1%D0%B0%D0%BD%D0%BE%D0%B2',
                       'https://www.youtube.com/watch?v=7WPN3t6vCSs&ab_channel=%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B5%D0%B9%D0%9A%D0%B0%D0%B1%D0%B0%D0%BD%D0%BE%D0%B2',
                       ['https://www.youtube.com/watch?v=3brn26Ad-ek&ab_channel=%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B5%D0%B9%D0%9A%D0%B0%D0%B1%D0%B0%D0%BD%D0%BE%D0%B2',
                        'https://www.youtube.com/watch?v=lx7FFGuoCjc&ab_channel=%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B5%D0%B9%D0%9A%D0%B0%D0%B1%D0%B0%D0%BD%D0%BE%D0%B2',
                        'https://www.youtube.com/watch?v=sRxnrC9b5Ww&ab_channel=%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B5%D0%B9%D0%9A%D0%B0%D0%B1%D0%B0%D0%BD%D0%BE%D0%B2'],
                       'https://www.youtube.com/watch?v=74JxEWKWdco&ab_channel=%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B5%D0%B9%D0%9A%D0%B0%D0%B1%D0%B0%D0%BD%D0%BE%D0%B2',
                       'https://www.youtube.com/watch?v=T71dkr15eXs&ab_channel=%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B5%D0%B9%D0%9A%D0%B0%D0%B1%D0%B0%D0%BD%D0%BE%D0%B2',
                       'https://www.youtube.com/watch?v=K98d5gi24Rc&list=PLuvJDOAX0cZEYnutYGo2Ny7qiaqtC1iZx&ab_channel=%D0%98%D0%BD%D1%84%D0%BE%D1%80%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0%D0%95%D0%93%D0%AD-%D0%A8%D0%BA%D0%BE%D0%BB%D0%BA%D0%BE%D0%B2%D0%BE'
                       ]
            keyb = types.InlineKeyboardMarkup(row_width=1)
            key_tasks = types.InlineKeyboardButton(text='–ó–∞–¥–∞—á–∏ –ø–æ —Ç–µ–º–µ', url=url_polyakov[number - 1])
            key_back = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥ üîô', callback_data='tasks')
            if number == 8 or number == 9:
                key_web1 = types.InlineKeyboardButton(text='–í–µ–±–∏–Ω–∞—Ä 1', url=url_web[number - 1][0])
                key_web2 = types.InlineKeyboardButton(text='–í–µ–±–∏–Ω–∞—Ä 2', url=url_web[number - 1][1])
                key_tasks = types.InlineKeyboardButton(text='–ó–∞–¥–∞—á–∏ –ø–æ —Ç–µ–º–µ', url=url_polyakov[number - 1])
                keyb.add(key_web1, key_web2, key_tasks)
            elif number == 24:
                key_web1 = types.InlineKeyboardButton(text='–í–µ–±–∏–Ω–∞—Ä 1', url=url_web[number - 1][0])
                key_web2 = types.InlineKeyboardButton(text='–í–µ–±–∏–Ω–∞—Ä 2', url=url_web[number - 1][1])
                key_web3 = types.InlineKeyboardButton(text='–í–µ–±–∏–Ω–∞—Ä 3', url=url_web[number - 1][2])
                key_tasks = types.InlineKeyboardButton(text='–ó–∞–¥–∞—á–∏ –ø–æ —Ç–µ–º–µ', url=url_polyakov[number - 1])
                keyb.add(key_web1, key_web2, key_web3, key_tasks)
            else:
                key_web = types.InlineKeyboardButton(text='–í–µ–±–∏–Ω–∞—Ä', url=url_web[number - 1])
                keyb.add(key_web, key_tasks)
            keyb.add(key_back)
            bot.send_message(call.from_user.id, text=f'–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è –Ω–æ–º–µ—Ä {number}:',
                             reply_markup=keyb)

        print(current_question)
        if call.data == "quiz":
            start_message = ("–û—Ç–ª–∏—á–Ω–æ, —Ç–æ–≥–¥–∞ –Ω–∞—á–Ω—ë–º –∏–≥—Ä—É! –í—Å–µ–≥–æ –±—É–¥–µ—Ç 10 –≤–æ–ø—Ä–æ—Å–æ–≤, –∫ –∫–∞–∂–¥–æ–º—É "
                             "–≤–æ–ø—Ä–æ—Å—É –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è 4 –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞, –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –≤–µ—Ä–Ω—ã–π")
            bot.send_message(call.from_user.id, text=start_message)
            q = get_question()
            bot.send_message(call.from_user.id, text=questions[q[0]], reply_markup=q[1])
        if call.data.startswith("ans"):
            data = call.data.split("_")
            if not (current_question == 10):
                if right_ans[int(data[2])] == int(data[1]):
                    bot.send_message(call.from_user.id, text="–í–µ—Ä–Ω–æ! –ò–¥—ë–º –¥–∞–ª—å—à–µ")
                    score += 1
                else:
                    bot.send_message(call.from_user.id, text="–ù–µ–≤–µ—Ä–Ω–æ(")
                q = get_question()
                bot.send_message(call.from_user.id, text=questions[q[0]], reply_markup=q[1])
            else:
                if right_ans[int(data[2])] == int(data[1]):
                    bot.send_message(call.from_user.id, text="–í–µ—Ä–Ω–æ!")
                    score += 1
                else:
                    bot.send_message(call.from_user.id, text="–ù–µ–≤–µ—Ä–Ω–æ(")
                bot.send_message(call.from_user.id, text=f"–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!\n–í–∞—à —Å—á—ë—Ç: {score}")
                current_question = 0
                nums.clear()
                return 0


bot.polling(none_stop=True, interval=0)
